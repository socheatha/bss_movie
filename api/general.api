<?php
	function bss_asset($url, $type = ''){
		return ABSOLUTE_PATH . 'asset/' . ($type?("{$type}/"):'') . $url;
	}
	function bss_lib($url, $type = ''){
		return ABSOLUTE_PATH . 'lib/' . ($type?("{$type}/"):'') . $url;
	}
	function bss_get_style($urls){
		if($urls && !is_array($urls)) $urls = [$urls];
		foreach ($urls as $key => $url) {
			echo '<link href="' . bss_asset($url, is_string($key) ? $key : 'css') . '" rel="stylesheet">';
		}
		unset($urls);
	}
	function bss_get_script($urls){
		if($urls && !is_array($urls)) $urls = [$urls];
		foreach ($urls as $key => $url) {
			echo '<script src="' . bss_asset($url, is_string($key) ? $key : 'js') . '"></script>';
		}
		unset($urls);
	}
	function bss_include($urls, $segment = '', $extra_js = [], $extract_variable = []){
		extract($extract_variable);
		if($urls && !is_array($urls)) $urls = [$urls];
		if(sizeof($extra_js) && is_array($extra_js)) $urls = array_merge($urls, $extra_js);
		foreach ($urls as $key => $url) {
			include_once BASE_PATH . ($segment ? $segment : '') .  $url;
		}
		unset($urls, $extra_js);
	}
	function bss_include_layout($urls, $extra_js = [], $extract_variable = []){
		bss_include($urls,'admin/layout/', $extra_js, $extract_variable);
		unset($urls, $extra_js);
	}
	function bss_link_admin($url){
		echo bss_path('admin/' . $url);
	}
	function bss_path($url){
		return ABSOLUTE_PATH . $url;
	}


	// ============================
	function bss_thumbnail($movie = []) {
		if (!$movie || empty($movie['thumbnail'])) $movie['thumbnail'] = bss_asset('landing/shattered.png', 'img');
		echo '
			<a href="' . bss_path('detail.php?id=' . $movie['id']) . '">
				<div class="ibox">
					<div class="ibox-content product-box">
						<div class="product-imitation embed-responsive embed-responsive-4by3" style="background-position: center center; background-size: cover; background-image: url(\'' . bss_path('data/movie/' . $movie['video_path'] . '/' . $movie['thumbnail']) . '\')">                        
						</div>
						<div class="product-desc">
							<span class="product-price" style="background-color: ' . $movie['color'] . '">' . $movie['cate_name_en'] . '</span>
							<!-- <small class="text-muted">Category</small> -->
							<a href="#" class="product-name" title="' . $movie['name_en'] . '" style="height: 50px; max-height: 50px; overflow: hidden;">' . $movie['name_en'] .'</a>
							<div class="small m-t-xs">
								Date : ' . bss_standard_date($movie['created_at']) . ' | 
								View : ' . bss_count_K($movie['view_count'] ?? 0) . ' |
								EP : ' . bss_count_K($movie['ep_count'] ?? 0) . '
							</div>
							<div class="m-t text-center">
								<a href="' . bss_path('detail.php?id=' . $movie['id']) . '" class="btn btn-xs btn-outline btn-primary">Watch <i class="fa fa-play"></i> | Download <i class="fa fa-download"></i></a>
							</div>
						</div>
					</div>
				</div>
			</a>
		';
	}

	function get_catories() {
		global $conn;
		$sql = "SELECT id, name_en, name_kh from categories ORDER BY id ASC";
		$result = $conn->query($sql);

		$T_result = [];
		if ($result->num_rows == 0) return $T_result;
		while($row = $result->fetch_assoc()) {
			$T_result[] = $row;
		}
		return $T_result;
	}

	function get_movie_list($category = null) {
		global $conn;
		$where_clause = '';
		if ($category) $where_clause .= " AND movies.category_id = " . $category . " ";

		$sql = "SELECT 
			movies.id, movies.name_en, movies.name_kh, movies.thumbnail, movies.video_path, movies.created_at, movies.view_count, movies.ep_count, movies.description, movies.keywords,
			categories.name_en cate_name_en, categories.name_kh cate_name_kh, categories.color from movies, categories
			WHERE movies.category_id=categories.id {$where_clause}
			ORDER BY id ASC";
		$result = $conn->query($sql);

		$T_result = [];
		if ($result->num_rows == 0) return $T_result;
		while($row = $result->fetch_assoc()) {
			$T_result[] = $row;
		}
		return $T_result;
	}

	function get_movie_detail($id = 1) {
		global $conn;
		$sql = "SELECT 
			movies.id, movies.name_en, movies.name_kh, movies.description, movies.keywords, movies.thumbnail, movies.created_at, movies.view_count, movies.ep_count, movies.video_path,
			categories.id cate_id, categories.name_en cate_name_en, categories.color, categories.description cate_description
		FROM movies, categories
		WHERE movies.category_id=categories.id and movies.id=" . $id;
		$result = $conn->query($sql);

		// if select not found return empty array
		$T_result = [];
		if ($result->num_rows == 0) return $T_result;
		$T_result['movie'] = $result->fetch_assoc();

		// get video playlist
		$T_playlist = [];
		$movie_path    = BASE_PATH . 'data/movie/' . $T_result['movie']['video_path'];
		if (file_exists($movie_path)) {
			$dir_list = array_diff(scandir($movie_path), array('.', '..'));
			natcasesort($dir_list);
			foreach ($dir_list as $playlist) {
				if (!preg_match('/^.*\.(mp4|mov)$/i', $playlist)) continue;
				$T_playlist[] = $playlist;
			}
		}
		$T_result['playlist'] = $T_playlist;

		// update EP number and count view + 1 
		$ep_count = sizeof($T_playlist);
		$view_count = $T_result['movie']['view_count'] + 1;
		$conn->query("UPDATE movies SET ep_count = $ep_count, view_count = $view_count WHERE id = $id");

		return $T_result;
	}

	function bss_standard_date($date) {
		return date("d/F/Y", strtotime($date));
	}

	function bss_count_K($num) {

		if($num>1000) {
	  
			  $x = round($num);
			  $x_number_format = number_format($x);
			  $x_array = explode(',', $x_number_format);
			  $x_parts = array('k', 'm', 'b', 't');
			  $x_count_parts = count($x_array) - 1;
			  $x_display = $x;
			  $x_display = $x_array[0] . ((int) $x_array[1][0] !== 0 ? '.' . $x_array[1][0] : '');
			  $x_display .= $x_parts[$x_count_parts - 1];
	  
			  return $x_display;
	  
		}
	  
		return $num;
	}

	function bss_remove_extension($file_name) {
		return preg_replace('/\\.[^.\\s]{3,4}$/', '', $file_name);
	}

	function bss_movie_playlist($movie, $playlist, $selected = null) {
		$return = '<div id="jstree1"><ul><li class="jstree-open">' . $movie['name_en'] . '<ul>';						
		foreach ($playlist as $pl) {
			echo  $pl;			
			$return .= '<li class="' . ($pl == $selected ? 'text-navy' : '') . '">
				<a href="' . bss_path('detail.php?id=' . $movie['id']) . '&playlist=' . $pl . '">
					' . $movie['name_en'] . ' | EP-' . bss_remove_extension($pl) . ' ' . ($pl == $selected ? '(Playing)' : '') . '
				</a>
			</li>';
		}
		$return .= '</ul></li></ul></div>';
		return $return;
	}

	function bss_convert_fields_to_statement_update($list_field = []) {
		global $conn;
		$stm_part = '';
        foreach ($list_field as $variable) {
            ${$variable} = $conn->real_escape_string($_POST[$variable] ?? '');
            $stm_part .= (" " . $variable . "='" . ${$variable} . "', ");
		}
		return rtrim($stm_part, ', ');
	}

	function bss_extract_add_data($list_field = []) {
		global $conn;
		$stm_part = [];
        foreach ($list_field as $variable) {
            ${$variable} = $conn->real_escape_string($_POST[$variable] ?? '');
            $stm_part[$variable] = ${$variable};
		}
		return $stm_part;
	}

	function bss_upload_image($file, $new_path, $old_file = null) {
		$result = '';
		if ($file && !empty($file["name"])) {
			$file_name = date("Ymd") . "_" . rand(1111, 9999) . ".png";
			if (!file_exists(BASE_PATH . 'data/movie/' . $new_path)) mkdir(BASE_PATH . 'data/movie/' . $new_path);
            if (move_uploaded_file($file['tmp_name'], BASE_PATH . 'data/movie/' . $new_path . '/' . $file_name)) {
                if ($old_file && file_exists(BASE_PATH . 'data/movie/' . $old_file) && is_file(BASE_PATH . 'data/movie/' . $old_file)) {
                    unlink(BASE_PATH . 'data/movie/' . $old_file);
                }
                $result = $file_name;
            }
        }
		return $result;
	}
